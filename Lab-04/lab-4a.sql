conn SYSTEM/123;

conn S200042133/nafisamaliyat;

@C:\Users\user\Documents\DBMS_LAB\Lab-4A\movie.sql;

--1-- INTERSECT
SELECT DIRECTOR.DIR_FIRSTNAME, DIRECTOR.DIR_LASTNAME
FROM DIRECTOR 
INTERSECT
SELECT ACT_FIRSTNAME, ACT_LASTNAME
FROM ACTOR;


--1--WITHOUT INTERSECT
SELECT DIRECTOR.DIR_FIRSTNAME, DIRECTOR.DIR_LASTNAME
FROM DIRECTOR, ACTOR
WHERE DIRECTOR.DIR_FIRSTNAME = ACTOR.ACT_FIRSTNAME
      AND DIRECTOR.DIR_LASTNAME = ACTOR.ACT_LASTNAME;


--2--
(
    SELECT DISTINCT ACTOR.ACT_FIRSTNAME AS FIRST_NAME
    FROM ACTOR
    UNION
    SELECT DISTINCT DIRECTOR.DIR_FIRSTNAME AS FIRST_NAME
    FROM DIRECTOR
)
MINUS 
(
    SELECT DISTINCT DIRECTOR.DIR_FIRSTNAME
    FROM DIRECTOR, ACTOR
    WHERE DIRECTOR.DIR_FIRSTNAME = ACTOR.ACT_FIRSTNAME
    AND DIRECTOR.DIR_LASTNAME = ACTOR.ACT_LASTNAME
);


--3-- WITHOUT MINUS
SELECT MOV_ID
FROM MOVIE
WHERE MOV_ID NOT IN (SELECT MOV_ID FROM RATING);

--3-- USING MINUS
(SELECT MOV_ID
FROM MOVIE)
MINUS 
(SELECT MOV_ID
FROM RATING);


--4--
SELECT AVG(REV_STARS) AS AVG_RATING
FROM RATING;


--5--
SELECT MOV_ID, MIN(REV_STARS) AS MIN_RATING
FROM RATING
GROUP BY MOV_ID
ORDER BY MIN_RATING DESC;


--6-- 
SELECT ACT_LASTNAME, COUNT(RATING.REV_STARS) AS RATING_COUNT
FROM ((ACTOR NATURAL JOIN CASTS) NATURAL JOIN RATING)
GROUP BY ACT_ID, ACT_LASTNAME;




--7--WIHOUT HAVING
SELECT DISTINCT ACT_LASTNAME, (SELECT AVG(MOV_TIME)
                                FROM MOVIE, CASTS
                                WHERE MOVIE.MOV_ID = CASTS.MOV_ID
                                AND CASTS.ACT_ID = ACTOR.ACT_ID
                              ) AS AVG_RUNTIME
FROM ACTOR, CASTS
WHERE ACTOR.ACT_ID = CASTS.ACT_ID AND
ACTOR.ACT_LASTNAME NOT IN
(
    SELECT ACTOR.ACT_LASTNAME
    FROM ACTOR, CASTS, DIRECTION, DIRECTOR
    WHERE CASTS.ACT_ID = ACTOR.ACT_ID
    AND CASTS.MOV_ID = DIRECTION.MOV_ID
    AND DIRECTION.DIR_ID =  DIRECTOR.DIR_ID
    AND DIRECTOR.DIR_FIRSTNAME = 'JAMES'
    AND DIRECTOR.DIR_LASTNAME = 'CAMERON'
);


--7--WITH HAVING--
SELECT MAX(ACT_LASTNAME) AS LASTNAME, AVG(MOV_TIME) AS AVG_RUNTIME
FROM ((ACTOR NATURAL JOIN CASTS) 
        NATURAL JOIN MOVIE)
GROUP BY ACT_ID
HAVING ACT_ID NOT IN (SELECT ACT_ID
                        FROM ((ACTOR NATURAL JOIN CASTS) 
                        NATURAL JOIN DIRECTION) 
                        NATURAL JOIN DIRECTOR
                        WHERE DIR_FIRSTNAME = 'JAMES'
                        AND DIR_LASTNAME = 'CAMERON'
);



--8-- WITHOUT ALL
SELECT DIRECTOR.DIR_FIRSTNAME, DIRECTOR.DIR_LASTNAME
FROM DIRECTOR, DIRECTION
WHERE DIRECTION.DIR_ID = DIRECTOR.DIR_ID
AND DIRECTION.MOV_ID IN
(SELECT MOV_ID 
        FROM RATING
        GROUP BY MOV_ID
        HAVING AVG(REV_STARS) = (SELECT MAX(AVG_RATING)
                                FROM 
                                (
                                    SELECT MOV_ID, AVG(REV_STARS) AS AVG_RATING
                                    FROM RATING
                                    GROUP BY MOV_ID)
                                )
);

--8-- USING ALL
SELECT DIRECTOR.DIR_FIRSTNAME, DIRECTOR.DIR_LASTNAME
FROM DIRECTOR, DIRECTION
WHERE DIRECTION.DIR_ID = DIRECTOR.DIR_ID
AND DIRECTION.MOV_ID IN
(SELECT MOV_ID 
        FROM RATING
        GROUP BY MOV_ID
        HAVING AVG(REV_STARS) >= ALL (SELECT AVG_RATING
                                FROM 
                                (
                                    SELECT MOV_ID, AVG(REV_STARS) AS AVG_RATING
                                    FROM RATING
                                    GROUP BY MOV_ID)
                                )
);


--9--
SELECT MOV_ID, MOV_TITLE AS TITLE, MOV_YEAR AS YEAR, 
MOV_LANGUAGE AS LANG, MOV_RELEASEDATE AS RELEASEDATE, 
MOV_COUNTRY AS COUNTRY
FROM MOVIE
WHERE MOV_ID IN
(
    SELECT MOV_ID 
    FROM DIRECTION
    WHERE DIR_ID IN 
        (
            SELECT DIRECTOR.DIR_ID
            FROM DIRECTOR, ACTOR
            WHERE DIRECTOR.DIR_FIRSTNAME = ACTOR.ACT_FIRSTNAME
            AND DIRECTOR.DIR_LASTNAME = ACTOR.ACT_LASTNAME
        )
);





--10--USING HAVING
SELECT MOV_TITLE
FROM MOVIE
WHERE MOV_ID IN
(
    SELECT MOV_ID 
    FROM RATING
    GROUP BY MOV_ID
    HAVING AVG(REV_STARS) > 7
);


--10--WITHOUT HAVING
SELECT MOV_TITLE
FROM MOVIE
WHERE MOV_ID IN
(
    SELECT MOV_ID 
    FROM (SELECT AVG_RATING, MOV_ID
          FROM (SELECT AVG(REV_STARS) AS AVG_RATING, MOV_ID
                FROM RATING 
                GROUP BY MOV_ID)
          WHERE AVG_RATING>7)
);



--11--
SELECT MOVIE.MOV_TITLE, (SELECT AVG(REV_STARS)
                    FROM RATING
                    WHERE RATING.MOV_ID = MOVIE.MOV_ID) AS AVG_RATING
FROM MOVIE
WHERE MOV_ID IN
(SELECT MOV_ID
FROM RATING
GROUP BY MOV_ID
HAVING AVG(REV_STARS) > (SELECT AVG(REV_STARS) 
                        FROM RATING));





--12--
SELECT   MOVIE.MOV_TITLE, (SELECT AVG(R.REV_STARS) 
                            FROM RATING R, RATING R2
                            WHERE R.MOV_ID = R2.MOV_ID
                            AND R.MOV_ID = MOVIE.MOV_ID) AS AVG_RATING
FROM MOVIE
WHERE MOVIE.MOV_ID IN (SELECT MOV_ID
                    FROM RATING);
    





--13--
SELECT ACT_FIRSTNAME
FROM ACTOR
WHERE ACT_GENDER = 'F' 
GROUP BY ACT_FIRSTNAME
HAVING COUNT(ACT_FIRSTNAME)>1;






--14--
--AT LEAST TEN REVIEWS
SELECT MOV_TITLE, (SELECT REV_RATING
                    FROM 
                    (SELECT MAX(REV_STARS) AS REV_RATING, MOV_ID
                    FROM RATING
                    GROUP BY MOV_ID
                    HAVING COUNT(REV_STARS) >= 10)
                    WHERE MOV_ID = MOVIE.MOV_ID) AS MAX_RATING 
FROM MOVIE
--FEMALE ACTRESS
WHERE MOV_ID IN (SELECT MOV_ID
                FROM CASTS
                WHERE ACT_ID IN (SELECT ACT_ID
                FROM ACTOR
                WHERE ACT_GENDER='F')) 
--ONE REVIEWER NEAL WRUCK
AND MOV_ID IN (SELECT MOV_ID 
                FROM RATING
                WHERE REV_ID IN (SELECT REV_ID
                                FROM REVIEWER
                                WHERE REV_NAME = 'Neal Wruck')) 
--NOT ANY THAT RECEIVE LESS THAN FOUR STARS
AND MOV_ID NOT IN (SELECT MOV_ID
                   FROM RATING
                   WHERE REV_STARS<4) 
--DIRECTOR DIRECTED AT LEAST ONE MOVIE
AND MOV_ID IN (SELECT MOV_ID
                FROM DIRECTION
                WHERE DIR_ID IN (SELECT DIR_ID
                                    FROM DIRECTION 
                                    GROUP BY DIR_ID
                                    HAVING COUNT(MOV_ID)>1 )); 